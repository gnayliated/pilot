# This is a basic workflow to help you get started with Actions

name: Running pilot upload pipeline every day

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 13,23 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  fetch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ secrets.AID }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "ubuntu-pilot-cli"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/ubuntu-pilot-cli.zip', Buffer.from(download.data));

      - name: unzip cli
        run: |
          mkdir -p target
          unzip ubuntu-pilot-cli.zip && chmod +x ./pilot-cli

      # Runs a single command using the runners shell
      - name: upload binance orderbook to git repo
        run: |
          ./pilot-cli remove-orderbook  \
          --symbols=BTCUSDT \
          --symbols=ETHUSDT \
          --lc-email="${{ secrets.LC_EMAIL }}" \
          --lc-pass="${{ secrets.LC_PASS }}"
