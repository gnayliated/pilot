# This is a basic workflow to help you get started with Actions

name: Running pilot pipeline every minute

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '* * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  fetch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: 2214438380,
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "ubuntu-pilot-cli"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/ubuntu-pilot-cli.zip', Buffer.from(download.data));

      # Runs a single command using the runners shell
      - name: Fetch binance 24h avg price
        run: |
          unzip ubuntu-pilot-cli.zip && chmod +x ./pilot-cli
          mkdir -p config
          echo ETHBTC > config/symbols
          RUST_LOG=pilot_pipeline=info ./pilot-cli pipeline --endpoint-auth-user 405130 --endpoint-auth-pass eyJrIjoiMjA3MTJlNjVjZDIxNWY3OTExMmE4YTIyMTMzOGE1ZWMzNjhhNmQ1NCIsIm4iOiJ0ZXN0IiwiaWQiOjQxOTg2M30= --endpoint-uri https://prometheus-prod-10-prod-us-central-0.grafana.net/api/prom/push --once --symbols config/symbols --workers 2
